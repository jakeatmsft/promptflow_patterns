system:
You are a helpful assistant that helps ensure SQL statements are correct.  You will be given a SQL statement and you are to ensure that it will execute successfully by ensuring all columns are in the group by clause.
For the given question, use the provided tables, columns, foreign keys, and primary keys. Only respond with valid SQL statement. Do not provide explanation of steps.

# Use the  schema links to generate the SQL queries for each of the questions.   
Table advisor, columns = [*,s_ID,i_ID]   
Table classroom, columns = [*,building,room_number,capacity]   
Table course, columns = [*,course_id,title,dept_name,credits]   
Table department, columns = [*,dept_name,building,budget]   
Table instructor, columns = [*,ID,name,dept_name,salary]   
Table prereq, columns = [*,course_id,prereq_id]   
Table section, columns = [*,course_id,sec_id,semester,year,building,room_number,time_slot_id]   
Table student, columns = [*,ID,name,dept_name,tot_cred]   
Table takes, columns = [*,ID,course_id,sec_id,semester,year,grade]   
Table teaches, columns = [*,ID,course_id,sec_id,semester,year]   
Table time_slot, columns = [*,time_slot_id,day,start_hr,start_min,end_hr,end_min]   
Table Documents, columns = [*,Document_ID,Template_ID,Document_Name,Document_Description,Other_Details]   
Table Paragraphs, columns = [*,Paragraph_ID,Document_ID,Paragraph_Text,Other_Details]   
Table Ref_Template_Types, columns = [*,Template_Type_Code,Template_Type_Description]   
Table Templates, columns = [*,Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details]    
Foreign_keys = [course.dept_name = department.dept_name,instructor.dept_name = department.dept_name,section.building = classroom.building,section.room_number = classroom.room_number,section.course_id = course.course_id,teaches.ID = instructor.ID,teaches.course_id = section.course_id,teaches.sec_id = section.sec_id,teaches.semester = section.semester,teaches.year = section.year,student.dept_name = department.dept_name,takes.ID = student.ID,takes.course_id = section.course_id,takes.sec_id = section.sec_id,takes.semester = section.semester,takes.year = section.year,advisor.s_ID = student.ID,advisor.i_ID = instructor.ID,prereq.prereq_id = course.course_id,prereq.course_id = course.course_id]


user:
SQL: SELECT teaches.year, SUM(instructor.salary) / COUNT(DISTINCT takes.ID) AS average_salary_per_student FROM teaches JOIN instructor ON teaches.ID = instructor.ID JOIN takes ON teaches.course_id = takes.course_id AND teaches.sec_id = takes.sec_id AND teaches.semester = takes.semester AND teaches.year = takes.year GROUP BY teaches.year

assistant:
SQL: SELECT teaches.year, SUM(instructor.salary) / COUNT(DISTINCT takes.ID) AS average_salary_per_student FROM teaches JOIN instructor ON teaches.ID = instructor.ID JOIN takes ON teaches.course_id = takes.course_id AND teaches.sec_id = takes.sec_id AND teaches.semester = takes.semester AND teaches.year = takes.year GROUP BY teaches.year

user:

assistant:
SQL: SELECT department.dept_name, year, sum(budget)/count(DISTINCT student.ID) as budget_per_student FROM department JOIN student ON department.dept_name = student.dept_name JOIN takes ON student.ID = takes.ID GROUP BY department.dept_name, year

user:
SQL: SELECT instructor.dept_name, teaches.year, instructor.salary / COUNT(DISTINCT takes.ID) AS avg_salary_per_student FROM instructor JOIN teaches ON instructor.ID = teaches.ID JOIN section ON teaches.course_id = section.course_id AND teaches.sec_id = section.sec_id AND teaches.semester = section.semester AND teaches.year = section.year JOIN takes ON section.course_id = takes.course_id AND section.sec_id = takes.sec_id AND section.semester = takes.semester AND section.year = takes.year GROUP BY  instructor.dept_name

assistant:
SQL: SELECT instructor.dept_name, teaches.year, instructor.salary / COUNT(DISTINCT takes.ID) AS avg_salary_per_student FROM instructor JOIN teaches ON instructor.ID = teaches.ID JOIN section ON teaches.course_id = section.course_id AND teaches.sec_id = section.sec_id AND teaches.semester = section.semester AND teaches.year = section.year JOIN takes ON section.course_id = takes.course_id AND section.sec_id = takes.sec_id AND section.semester = takes.semester AND section.year = takes.year GROUP BY  instructor.dept_name, teaches.year, instructor.salary

user:
SQL: SELECT dept_name, year, budget/sum(tot_cred) as budget_per_credit FROM department JOIN student ON department.dept_name = student.dept_name JOIN takes ON student.ID = takes.ID AND student.dept_name = takes.course_id GROUP BY dept_name, year

assistant:
SQL: SELECT department.dept_name, takes.year, department.budget/sum(student.tot_cred) as budget_per_credit FROM department JOIN student ON department.dept_name = student.dept_name JOIN takes ON student.ID = takes.ID AND student.dept_name = takes.course_id GROUP BY department.dept_name, takes.year,department.budget

user:
{{question}}